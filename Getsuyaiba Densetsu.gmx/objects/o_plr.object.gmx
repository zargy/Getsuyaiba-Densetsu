<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>scroll</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ver=0;
hor=0;
use_attack = get_input(INPUT_ATTACK);
state=0; //Attacking or no Attacking
rate=1+(global.spd*0.3);
border=24;


warp=false;
attack=false;
cooldown=30;
current_cooldown=0;
target_frame=0;
current_frame=0;
show_swing=false;

show_spray=false;
spray_frame=0;

myhp = global.hp;
invuln =false;
invuln_tick =0;
invuln_duration=20;

gained_xp=0;
gained_gold=0;

death =false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.gold=round(global.gold*0.5);
if o_stats.previousRoom != -1 {room_goto(o_stats.previousRoom);}
else room_goto(overworld_main);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o_stats.previousRoom != -1 {room_goto(o_stats.previousRoom);}
else room_goto(overworld_main);

global.gold+=gained_gold;
global.xp+=gained_xp;
global.hp=myhp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ver=get_input(INPUT_DOWN)-get_input(INPUT_UP);
hor=get_input(INPUT_RIGHT)-get_input(INPUT_LEFT);

use_attack = get_input(INPUT_ATTACK);


cooldown=30-(global.agility*2);

if x &lt; view_xview[0]+border {x=view_xview[0]+border};
else if x &gt; view_xview[0]+view_wview[0]-border {x=view_xview[0]+view_wview[0]-border};



if y &lt; view_yview[0]+border {y=view_yview[0]+border};
else if y &gt; view_yview[0]+view_hview[0]-border-32 {y=view_yview[0]+view_hview[0]-border-32};


if myhp &gt;0
{
if ver !=0
    {
    y+=ver*rate;
    }
    
    

if hor !=0
    {
    x+=hor*rate;
    }
    

if attack==false
    {
    if use_attack {
        attack=true; instance_create(x,y,o_plr_swing); state=1; show_swing=true; current_frame++; if target_frame==0 {target_frame=2;} else target_frame=0;
        
        if (!audio_is_playing(snd_player_grunt04) &amp;&amp; !audio_is_playing(snd_player_grunt03) &amp;&amp; !audio_is_playing(snd_player_grunt02) &amp;&amp; !audio_is_playing(snd_player_grunt01))
            {
            var sound_effect;
            sound_effect=irandom_range(0,10);
            if sound_effect &lt;1 {audio_play_sound(snd_player_grunt04,100,false);}
            else if sound_effect &lt;2 {audio_play_sound(snd_player_grunt03,100,false);}
            else if sound_effect &lt;6 {audio_play_sound(snd_player_grunt02,100,false);}
            else {audio_play_sound(snd_player_grunt01,100,false);}
            }
        }
    if (current_frame!=0 &amp;&amp; state==1) {current_frame--;} else if (current_frame==0 &amp;&amp; state==1) {state=0; target_frame=0;}
    }
    else
    {
        if target_frame &gt; current_frame {current_frame+=0.5;}
        else if target_frame &lt; current_frame {current_frame-=0.5;}
        else {show_swing=false;}
        if current_cooldown&lt;cooldown
            {
            current_cooldown++;
            }
        else
            {
            current_cooldown=0;
            attack=false;
            }
    }
    

    
    if instance_exists(o_effect_water)
        {
        if y &gt;view_yview[0]+view_hview[0]-border-34 {show_spray=true; spray_frame+=1;}
        else {show_spray=false; spray_frame=0;}
        }
        
if invuln==false
    {
    visible=true;
    invuln_tick=0;
    }
else
    {
    if visible==true {visible=false;} else visible=true;
    if invuln_tick&lt;=0
        {
        invuln=0;
        }
        else {invuln_tick-=1;}
    }
}
else
    {
    visible=false;
    if death ==false {death=true; alarm[1]=120;
    
        a=instance_create(x,y,o_enemy_death);
        a.sprite=sprite_index;
        a.image=image_index;
        a.image_speed=0;
        event_user(4);
        audio_play_sound(snd_player_death,1,false);
    }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if invuln ==false
    {
    invuln =true;
    myhp -=other.dmg;
    invuln_tick =invuln_duration;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if audio_is_playing(mus_battle1) {audio_stop_sound(mus_battle1);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var offset;
if ver ==0 {offset=0;}
else if ver ==1 {offset=4;}
else if ver ==-1 {offset=2;}
image_speed=0.5;
if state==0
{
draw_sprite(s_player,((image_index) mod 2)+(offset),x,y);
}
else if state==1
    {
    draw_sprite(s_player_swing,current_frame,x,y);
    }
    
if show_swing==true
    {
    if (current_frame==0 &amp;&amp; target_frame==0)
        {
        draw_sprite(s_player_attack,0,x,y);
        }
    else if (current_frame==1 &amp;&amp; target_frame==2)
        {
        draw_sprite(s_player_attack,1,x,y);
        }
    else if (current_frame==1 &amp;&amp; target_frame==0)
        {
        draw_sprite(s_player_attack,3,x,y);
        }
    else if (current_frame==2 &amp;&amp; target_frame==2)
        {
        draw_sprite(s_player_attack,2,x,y);
        }
    }
    
    
if show_spray==true
    {
    draw_sprite(s_spray,spray_frame,x-16,y);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>28,28</point>
    <point>28,28</point>
  </PhysicsShapePoints>
</object>
