<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>index = TOWN_NONE;

//Selections:
// 0: Talk
// 1: Shop
// 2: Inn
// 3: Leave


//STATE:
// -1 Transition State
// 0 main menu
// 1 talk
// 2 shop
// 3 inn
state = 0;
nestState = 0;
//The menu option you have selected.
mainMenuIndex = 0;

//The shop option you have selected.
shopIndex = 0;
//The size of the shop list. Is updated each step.
shopSize = 0;


//0 Inn is starting
//1 Inn is in progress
//2 Inn is finished
innState = 0;

image_speed = 0;

//The text object for the talk section.
talkObject = -1;

//The x, y, and width for the text ticker
talkx = 20;
talky = 132;
talkw = 218;


//The images for the background. -1 means none.
//Can be a sprite, remember to set the image speed yourself.
backSpriteMain = -1;
backSpriteShop = -1;
backSpriteTalk = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>innState = 1;
alarm[1] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inn -&gt; Main
nextState = 0;
alarm[0] = 20;
state = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The alarm for switching menus
state = nextState;

if state = 1
{
    talkObject = instance_create(talkx,talky,o_text_ticker);
    with talkObject
    {
        tickerFullString[0] = "This is a talk menu test. Please remain calm. Your handler will be here momentaraly to assist you. Lovely weather, isn't it?"
        w = other.talkw;
        textFont = font;
        spd = .4;
        depth= other.depth - 20;
    }
}
else if state = 3
{
    innState = 0;
    alarm[2] = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Main Town Menu
if state = 0
{
    if get_input_pressed(INPUT_DOWN)
    {
        if mainMenuIndex &gt;= 3
        {
            mainMenuIndex = 0;
        } else mainMenuIndex += 1;
    }
    else if get_input_pressed(INPUT_UP)
    {
        if mainMenuIndex &lt;= 0
        {
            mainMenuIndex = 3;
        } else mainMenuIndex -= 1;
    }
    
    if get_input_pressed(INPUT_ATTACK) or get_input_pressed(INPUT_MENU)
    {
        switch(mainMenuIndex)
        {
            case 0:
                nextState = 1;
                state = -1;
                alarm[0] = 20;
            break;
            
            case 2:
                nextState = 3;
                state = -1;
                alarm[0] = 20;
            break;
        }
    }
}
else if state = 1
{
    if !instance_exists(talkObject)
    {
        nextState = 0;
        state = -1;
        alarm[0] = 20;
    }
}
else if state = 3
{
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_set_font(menu_font);



if state = 0
{
    var sep = 18;
    var xx=5,yy=4;
    
    if sprite_exists(backSpriteMain)
    {
        draw_sprite(backSpriteMain,-1,0,0)
    }
    
    menu_box_draw(xx+16,yy+10,xx+96,yy+86,true,c_black);
    
    draw_text_shadow(xx+36,yy+22,1,1,"Tavern",c_white,c_blue,-1);
    draw_text_shadow(xx+36,yy+22+sep,1,1,"Shop",c_white,c_blue,-1);
    draw_text_shadow(xx+36,yy+22+sep*2,1,1,"Inn",c_white,c_blue,-1);
    draw_text_shadow(xx+36,yy+22+sep*3,1,1,"Embark",c_white,c_blue,-1);
    
    draw_sprite(s_menu_hand,0,xx+34,yy+22+(sep*mainMenuIndex));
}
else if state = 1
{
    if sprite_exists(backSpriteTalk)
    {
        draw_sprite(backSpriteTalk,-1,0,0)
    }
    menu_box_draw(16,128,240,224,true,c_black);
}
else if state = 3
{
    draw_set_halign(fa_center);
    draw_text_shadow(128,96,1,1,string(global.hp)+"/"+string(global.maxhp),c_white,c_blue,-1);
    if innState = 1
    {
        draw_text_shadow(128,120,1,1,"Health Restored.",c_white,c_blue,-1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
