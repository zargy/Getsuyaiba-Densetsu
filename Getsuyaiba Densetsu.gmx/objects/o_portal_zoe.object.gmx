<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_portal_open_alone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The ticker text display

//tickerState
//0: ticker is typing out text
//1: ticker is paused after typing out. Advances back to 0 when the input is pressed.
tickerState = 0;

tickerRunning = false;
//The full array of strnig(s) for the text.
tickerFullString[0] = "Zoe: Hey Sensy, don'tcha get tired of all that flying? How's that even work?";
tickerFullString[1] = "Sen: I guess it's the sword that does most of the work. I guess it kind of just, happens?";
tickerFullString[2] = "Zoe: That's no explanation! Wait, what's that?";
tickerFullString[3] = "Sen: Nice work! I can open this up, just... Give me a few seconds...";
tickerFullString[4] = "Zoe: Guess that just kinda happens too huh?";
tickerFullString[5] = "Sen: Not quite. I have to focus a lot on it... There!";
tickerFullString[6] = "Zoe: That's a beaut! So ya say there's an entire island under that right?";
tickerFullString[7] = "Sen: There should be. I don't know how you're going to fit your airship through that though...";
tickerFullString[8] = "Zoe: If I can find a way to fit -myself- through then I think the ship'll be fine too. All aboard, right Sensy?";
tickerFullString[9] = "Sen: Ahahah, we'll be fine. All aboard!";
tickerFullString[10] = "";
tickerString = "";
stringIndex = 0;
lineIndex = 0;
spd = 1.5;
finished = false;
lineFinished = false;
tickerInput = INPUT_ATTACK;

//set width and height to -1 for no limit.
w = 256-8;
h = -1;
textFont = menu_font;

//Cutscene Progress

cutscene_progress=0; //The frame to show


tickerDuration=220;
tickerCountdown=tickerDuration;
senX= room_width;
senDestination= 16;
destination = overworld_main;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(destination);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tickerState = 0
{

    if stringIndex &lt; string_length(tickerFullString[lineIndex])
    {
        stringIndex+=spd;
        tickerString = string_copy(tickerFullString[lineIndex],1,floor(stringIndex));
    }
    else
    {
        tickerState = 1;
    }
}
else if tickerState = 1
{
if tickerCountdown &gt;0 {tickerCountdown--;}
    if tickerCountdown==0
    {
        tickerCountdown = tickerDuration;
        tickerString = "";
        stringIndex  = 0;
        lineIndex += 1;
        if lineIndex &gt; array_length_1d(tickerFullString)-1
        {
            instance_destroy();
        }
        else
        {
            tickerState = 0;
        }
    }
}




if (lineIndex ==1 || lineIndex ==0) {cutscene_progress=0;}
if (lineIndex ==2 ||  lineIndex ==3 ||  lineIndex ==4) {if cutscene_progress=0 {cutscene_progress=1;} else cutscene_progress=0;}
if (lineIndex ==5) {if cutscene_progress&lt;8 {cutscene_progress+=0.75;} else cutscene_progress=8;}
if senX &gt; senDestination {if lineIndex ==0 {senX-=0.75;} else if lineIndex ==1 {senX-=0.25;} else  {senX-=0.1;}}

if lineIndex &gt;8 {if visible==true {visible=false;} else visible=true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(textFont);


draw_sprite(s_portal_open_alone,cutscene_progress,x,y);

draw_sprite(s_portal_sen,0,senX,y+8)

if (lineIndex== 0 || lineIndex== 1 || lineIndex== 2 || lineIndex== 3 || lineIndex== 6 || lineIndex== 8) {draw_sprite(s_portal_zoe,0,senX+80,y+24);}
else {draw_sprite(s_portal_zoe,1,senX+80,y+24);}
draw_text_shadow(8,144,1,1,tickerString,c_white,c_blue,w);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
