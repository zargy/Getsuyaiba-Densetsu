<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_overworld</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hover=0;
hover_prog = 0;

dx = 0;
dy = 0;

speed_rate = 0.1;
cap = 4;


ver=0;
hor =0;
anim=0;
anim_offset=0;

altitude=32;
dive=0;

dive_rate=0;
scale=1;
diving=0;
transition = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ver=get_input(INPUT_DOWN)-get_input(INPUT_UP);
hor=get_input(INPUT_RIGHT)-get_input(INPUT_LEFT);


hover = sin(hover_prog)*4;
hover_prog +=0.05;


if ver ==0 {dy*=0.75;}
else if !transition {dy+=(speed_rate)*ver;}
if hor ==0 {dx*=0.75;}
else if !transition {dx+=(speed_rate)*hor;}

if dx &gt; cap {dx=cap;}
else if dx &lt; -cap {dx=-cap;}
if dy &gt; cap {dy=cap;}
else if dy &lt; -cap {dy=-cap;}

x+=dx;
y+=dy;


if x &lt; view_wview {x=room_width-view_wview;}
else if x &gt; room_width-view_wview {x=view_wview;}

if y &lt; view_hview {y=room_height-view_hview;}
else if y &gt; room_height-view_hview {y=view_hview;}


if (get_input_pressed(INPUT_ATTACK) and diving==0 ) 
{
    diving = 1;
    if collision_ellipse(x-8,y-4,x+8,y+4,o_map_interaction,true,true)
    {
        transition = true;
        dx = 0;
        dy = 0;
    }
}

if (diving!=0)
    {
    if dive &gt;-3
        {
        dive -=0.05;
        }
    else if !transition {dive=0; diving=0;}
    }
    altitude = sin(dive)*32+32;
    
scale = 1+(sin(dive)*0.75);

audio_listener_position(x, y, 0);
audio_listener_orientation(x, y, 100,0,0,1);


if o_encounter.encounter_time==1
    {
    dx=0;
    dy=0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_line_colour(x,y,(o_albard.x+(o_albard.sprite_width*0.5+128)),(o_albard.y+(o_albard.sprite_height*0.5-128)),c_white,c_white);

draw_line_colour(x,y,(o_verdt.x+(o_verdt.sprite_width*0.5)),(o_verdt.y+(o_verdt.sprite_height*0.5-240)),c_white,c_white);

draw_line_colour(x,y,(o_bilai.x+(o_bilai.sprite_width*0.5)),(o_bilai.y+(o_bilai.sprite_height*0.5-160)),c_white,c_white);

if o_encounter.encounter_time==0
{
if (ver ==0 &amp;&amp; hor ==0)
    {
    anim_offset=0;
    }
    else {anim_offset=4;}
    
    

    if ver ==1 {anim=0;} else if ver ==-1 {anim=2;}
    if hor ==1 {anim=1;} else if hor ==-1 {anim=3;}
draw_sprite_ext(s_shadow,0,x,y,scale,scale,0,c_white,1);
draw_sprite_ext(s_overworld,anim+anim_offset,x,y-altitude-hover,scale,scale,0,c_white,1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
